{"version":3,"sources":["../index.js"],"names":[],"mappings":";;;;;AAAA,SAAS,YAAT,GAAwB;AACtB,OAAK,KAAL;AACD;;AAED,aAAa,SAAb,GAAyB;AACvB,YAAU,oBAAW;AACnB,WAAO,uBAAP;AACD,GAHsB;AAIvB,OAAK,aAAU,KAAV,EAAkB;AACrB,QAAI,OAAO,KAAK,MAAhB;AACA,QAAM,IAAI,MAAM,MAAhB;;AAEA,SAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,CAApB,EAAuB,GAAvB,EAA4B;AAC1B,UAAK,CAAC,KAAK,GAAN,IAAa,CAAC,KAAK,GAAL,CAAS,MAAM,CAAN,CAAT,CAAnB,EAAwC;AACtC,eAAO,KAAP;AACD;AACD,aAAO,KAAK,GAAL,CAAS,MAAM,CAAN,CAAT,CAAP;AACD;;AAED,WAAO,IAAP;AACD,GAhBsB;;AAkBvB,OAAK,aAAU,KAAV,EAAiB,KAAjB,EAAyB;AAC5B,QAAI,OAAO,KAAK,MAAhB;AACA,QAAM,IAAI,MAAM,MAAhB;AACA,QAAI,aAAa,KAAjB;;AAEA,SAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,IAAI,CAAxB,EAA2B,GAA3B,EAAgC;AAC9B,UAAK,CAAC,UAAD,IAAe,KAAK,GAAL,CAAS,MAAM,CAAN,CAAT,CAApB,EAAyC;AACvC,eAAO,KAAK,GAAL,CAAS,MAAM,CAAN,CAAT,CAAP;AACD,OAFD,MAEO;AACL,qBAAa,IAAb;AACA,aAAK,GAAL,CAAU,MAAM,CAAN,CAAV,EAAsB,OAAO,IAAI,OAAJ,EAA7B;AACD;AACF;;AAED,SAAK,GAAL,CAAS,MAAM,IAAI,CAAV,CAAT,EAAuB,KAAvB;;AAEA,WAAO,IAAP;AACD,GAnCsB;;AAqCvB,OAAK,aAAU,KAAV,EAAkB;AACrB,QAAI,OAAO,KAAK,MAAhB;AACA,QAAM,IAAI,MAAM,MAAhB;;AAEA,SAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,CAApB,EAAuB,GAAvB,EAA4B;AAC1B,UAAM,MAAM,KAAK,GAAL,IAAY,KAAK,GAAL,CAAS,MAAM,CAAN,CAAT,CAAxB;AACA,UAAK,QAAQ,SAAb,EAAyB;AACvB,eAAO,GAAP;AACD,OAFD,MAEO;AACL,eAAO,GAAP;AACD;AACF;;AAED,WAAO,IAAP;AACD,GAnDsB;;AAqDvB,SAAO,iBAAW;AAChB,SAAK,MAAL,GAAc,IAAI,OAAJ,EAAd;AACD;AAvDsB,CAAzB;;kBA0De,Y","file":"index.js","sourcesContent":["function WeakTupleMap() {\n  this.clear();\n}\n\nWeakTupleMap.prototype = {\n  toString: function() {\n    return '[object WeakTupleMap]';\n  },\n  has: function( tuple ) {\n    let curr = this._cache;\n    const l = tuple.length;\n\n    for( let i = 0; i < l; i++) {\n      if ( !curr.has || !curr.has(tuple[i]) ) {\n        return false;\n      }\n      curr = curr.get(tuple[i]);\n    }\n\n    return true;\n  },\n\n  set: function( tuple, value ) {\n    let curr = this._cache;\n    const l = tuple.length;\n    let mustCreate = false;\n\n    for( let i = 0; i < l - 1; i++) {\n      if ( !mustCreate && curr.has(tuple[i]) ) {\n        curr = curr.get(tuple[i]);\n      } else {\n        mustCreate = true;\n        curr.set( tuple[i], ( curr = new WeakMap() ) );\n      }\n    }\n\n    curr.set(tuple[l - 1], value);\n\n    return this;\n  },\n\n  get: function( tuple ) {\n    let curr = this._cache;\n    const l = tuple.length;\n\n    for( let i = 0; i < l; i++) {\n      const ret = curr.get && curr.get(tuple[i]);\n      if ( ret === undefined ) {\n        return ret;\n      } else {\n        curr = ret;\n      }\n    }\n\n    return curr;\n  },\n\n  clear: function() {\n    this._cache = new WeakMap();\n  },\n};\n\nexport default WeakTupleMap;\n"]}