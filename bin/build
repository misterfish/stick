#!/bin/bash

set -eu
set -o pipefail

bindir=$(realpath "$(dirname "$0")")

. "$bindir"/functions.bash
. "$bindir"/vars

USAGE="Usage: $0 [-w | --watch] [-p | --publish]"

opt_w=
opt_p=
while getopts hpw-: arg; do
    case $arg in
        h) warn "$USAGE"; exit 0 ;;
        w) opt_w=yes ;;
        p) opt_p=yes ;;
        -) OPTARG_VALUE="${OPTARG#*=}"
            case $OPTARG in
                help)  warn "$USAGE"; exit 0 ;;
                watch)  opt_w=yes ;;
                publish)  opt_p=yes ;;
                '')    break ;;
                *)     error "Illegal option --$OPTARG" ;;
                esac ;;
        *) error "$USAGE" ;;
    esac
done
shift $((OPTIND-1))

distfiles=(
    index.js
    # monad.js
    operator.js
    manual.js
    internal/
)

build () {
    local watch
    local opt
    watch="${1:-}"
    if [ "$watch" = yes ]; then opt=-wd;
    else opt=-d
    fi

    cmd "$nodebindir"/babel "$opt" "$libdir" "$srcdir"
}

build-watch () {
    cmd build yes
}

copy () {
    local file
    file="$1"
    cmd cp -raf "$libdir"/"$file" "$rootdir"
}

copy-files () {
    for i in "${distfiles[@]}"; do
        copy "$i"
    done
}

publish () {
    cmd npm publish
}

if [ "$opt_w" = yes ]; then
    build-watch
else
    build
    info 'copying built files to root, so npm works'
    copy-files
    if [ "$opt_p" = yes ]; then publish; fi
fi

